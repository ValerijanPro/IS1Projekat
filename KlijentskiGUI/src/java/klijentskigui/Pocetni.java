/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klijentskigui;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.HttpURLConnection;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.Resource;
import javax.jms.JMSConsumer;
import javax.jms.JMSContext;
import javax.jms.Message;
import javax.jms.Topic;
import javax.persistence.PersistenceContext;
import javax.jms.ConnectionFactory;
import javax.jms.JMSConsumer;
import javax.jms.JMSContext;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.TextMessage;
import javax.jms.Topic;
import javax.naming.InitialContext;
import javax.naming.NamingException;

/**
 *
 * @author Valja
 */
public class Pocetni extends javax.swing.JFrame {

   @PersistenceContext
   
    @Resource(lookup="myConnFactory")
    private static ConnectionFactory connectionFactory;
     
    @Resource(lookup="MyTopic")
    private static Topic topic;
    /**
     * Creates new form Pocetni
     */
    private String user;
    private String pass;
    public Pocetni() {
        initComponents();
    }
    public void setUserPass(String u, String p){
        user=u;pass=p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PostaviObican = new javax.swing.JButton();
        vremeZvonaPolje = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nazivPesmePolje = new javax.swing.JTextField();
        PustiPesmu = new javax.swing.JButton();
        periodPolje = new javax.swing.JTextField();
        PostaviPeriodican = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        IstorijaPustanja = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ComboBoxPostavi = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        melodijaZvonaPolje = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        IdAlarmaMelodijaPolje = new javax.swing.JTextField();
        PostaviMelodiju = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        VremePocO = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        TrajanjeO = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        DestinacijaO = new javax.swing.JTextField();
        dodajObavezu = new javax.swing.JButton();
        izlistajObaveze = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        PidObaveze = new javax.swing.JTextField();
        ObrisiO = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        PVremePocO = new javax.swing.JTextField();
        PostaviVPO = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        PTrajanjeO = new javax.swing.JTextField();
        PDestinacijaO = new javax.swing.JTextField();
        PostaviTO = new javax.swing.JButton();
        PostaviDO = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        razdaljinaPoc = new javax.swing.JTextField();
        razdaljinaKraj = new javax.swing.JTextField();
        izracunajRazdaljinu = new javax.swing.JButton();
        razdaljinaOdg = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PostaviObican.setText("Postavi obican alarm");
        PostaviObican.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PostaviObicanMouseReleased(evt);
            }
        });

        jLabel1.setText("Vreme zvona: [yyyy.mm.dd hh:mm:ss]");

        jLabel2.setText("Naziv pesme:");

        PustiPesmu.setText("Pusti pesmu");
        PustiPesmu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PustiPesmuMouseReleased(evt);
            }
        });

        PostaviPeriodican.setText("Postavi periodican alarm");
        PostaviPeriodican.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PostaviPeriodicanMouseReleased(evt);
            }
        });

        jLabel3.setText("Period: [hh:mm:ss]");

        IstorijaPustanja.setText("Istorija pustanja");
        IstorijaPustanja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                IstorijaPustanjaMouseReleased(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00:00:00", "03:00:00", "06:00:00", "09:00:00", "12:00:00", "15:00:00", "18:00:00", "21:00:00", " " }));

        jLabel4.setText("Jedno od ponudjenih vremena:");

        ComboBoxPostavi.setText("Postavi");
        ComboBoxPostavi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ComboBoxPostaviMouseReleased(evt);
            }
        });

        jLabel5.setText("Melodija:");

        jLabel6.setText("IdAlarma:");

        PostaviMelodiju.setText("postaviMelodiju");
        PostaviMelodiju.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PostaviMelodijuMouseReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("UnosObaveze");

        jLabel8.setText("Vreme pocetka: [yyyy.mm.dd hh:mm:ss]");

        jLabel9.setText("Trajanje: [hh:mm:ss]");

        jLabel10.setText("Destinacija:");

        DestinacijaO.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        dodajObavezu.setText("Dodaj obavezu");
        dodajObavezu.setActionCommand("");
        dodajObavezu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dodajObavezuMouseReleased(evt);
            }
        });

        izlistajObaveze.setText("Izlistaj sve obaveze");
        izlistajObaveze.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                izlistajObavezeMouseReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("IdObaveze:");

        ObrisiO.setText("obrisi");
        ObrisiO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ObrisiOMouseReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Menjanje obaveza");

        jLabel13.setText("Novo vreme pocetka:");

        PostaviVPO.setText("postavi");
        PostaviVPO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PostaviVPOMouseReleased(evt);
            }
        });

        jLabel14.setText("Novo trajanje:");

        jLabel15.setText("Nova destinacija:");

        PostaviTO.setText("postavi");
        PostaviTO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PostaviTOMouseReleased(evt);
            }
        });
        PostaviTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostaviTOActionPerformed(evt);
            }
        });

        PostaviDO.setText("postavi");
        PostaviDO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PostaviDOMouseReleased(evt);
            }
        });
        PostaviDO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostaviDOActionPerformed(evt);
            }
        });

        jLabel16.setText("Pocetak:");

        jLabel17.setText("Kraj:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Kalkulator razdaljine");

        izracunajRazdaljinu.setText("Izracunaj vreme");
        izracunajRazdaljinu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                izracunajRazdaljinuMouseReleased(evt);
            }
        });
        izracunajRazdaljinu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izracunajRazdaljinuActionPerformed(evt);
            }
        });

        jLabel19.setText("Odgovor:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(IstorijaPustanja, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(izlistajObaveze, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(VremePocO)
                                    .addComponent(TrajanjeO, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                    .addComponent(DestinacijaO))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel11))
                                        .addGap(56, 56, 56))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(115, 115, 115)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dodajObavezu, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addGap(52, 52, 52))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nazivPesmePolje, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(periodPolje, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vremeZvonaPolje, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PostaviObican, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PustiPesmu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PostaviPeriodican, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(35, 35, 35)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(70, 70, 70)
                                        .addComponent(ComboBoxPostavi)
                                        .addGap(27, 27, 27))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(melodijaZvonaPolje, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(izracunajRazdaljinu)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel16)
                                                            .addComponent(jLabel17))
                                                        .addGap(29, 29, 29)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(razdaljinaPoc, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                                            .addComponent(razdaljinaKraj)))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(jLabel19)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                                        .addComponent(razdaljinaOdg, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel18)
                                        .addComponent(PostaviMelodiju, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ObrisiO, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(29, 29, 29)
                                        .addComponent(IdAlarmaMelodijaPolje, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(PostaviVPO)
                                    .addComponent(PostaviTO)
                                    .addComponent(PostaviDO))
                                .addGap(235, 235, 235))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PTrajanjeO)
                            .addComponent(PVremePocO, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(PidObaveze, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                            .addComponent(PDestinacijaO))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(382, 382, 382))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(PostaviObican, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ComboBoxPostavi)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(vremeZvonaPolje, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(periodPolje, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PostaviPeriodican, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(melodijaZvonaPolje, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdAlarmaMelodijaPolje, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nazivPesmePolje, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PustiPesmu, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PostaviMelodiju))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(IstorijaPustanja, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(VremePocO, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(PidObaveze, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ObrisiO)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(razdaljinaPoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(32, 32, 32)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(PVremePocO, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PostaviVPO))
                                    .addComponent(TrajanjeO, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(DestinacijaO, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PTrajanjeO, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PostaviTO)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(izlistajObaveze, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dodajObavezu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(6, 6, 6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(PDestinacijaO, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PostaviDO)
                                            .addComponent(jLabel15))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(razdaljinaKraj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(izracunajRazdaljinu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(razdaljinaOdg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(35, 35, 35))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PostaviObicanMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostaviObicanMouseReleased
        String vreme=vremeZvonaPolje.getText();
        vreme = vreme.replace(" ", "%20");
        System.out.println(vreme);
        new Thread(){
            private String vreme;
            private String putanja="http://localhost:8080/projekat1/resources/alarmi/";
            public void run(){
                
                try {
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    
                    
                    putanja+=vreme;
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setVreme(String v){
                vreme=v;
                return this;
            }
        }.setVreme(vreme).start();
    }//GEN-LAST:event_PostaviObicanMouseReleased

    private void ComboBoxPostaviMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxPostaviMouseReleased
        String vreme=jComboBox1.getSelectedItem().toString();
        
        new Thread(){
            private String vreme;
            private String putanja="http://localhost:8080/projekat/resources/alarmi/";
            public void run(){
                
                try {
                    Date date=java.util.Calendar.getInstance().getTime();
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd");  
                    String vreme1=formatter.format(date);
                    vreme=vreme1+" "+vreme;
                    
                    
                    vreme = vreme.replace(" ", "%20");
                    System.out.println(vreme);
                    //String vreme1=
                    
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    putanja+=vreme;
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setVreme(String v){
                vreme=v;
                return this;
            }
        }.setVreme(vreme).start();
    }//GEN-LAST:event_ComboBoxPostaviMouseReleased

    private void PostaviPeriodicanMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostaviPeriodicanMouseReleased
         String vreme=vremeZvonaPolje.getText();
         vreme = vreme.replace(" ", "%20");
         String period=periodPolje.getText();
         
        new Thread(){
            private String vreme;
            private String period;
            private String putanja="http://localhost:8080/projekat/resources/alarmi/periodican/";
            public void run(){
                
                try {
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    putanja+=vreme;
                    putanja+="/";
                    putanja+=period;
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setVremeIPeriod(String v,String p){
                vreme=v;period=p;
                return this;
            }
        }.setVremeIPeriod(vreme,period).start();
    }//GEN-LAST:event_PostaviPeriodicanMouseReleased

    private void PostaviMelodijuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostaviMelodijuMouseReleased
        
        String melodija=melodijaZvonaPolje.getText();
        melodija = melodija.replace(" ", "%20");
        int idA=Integer.parseInt(IdAlarmaMelodijaPolje.getText());
        
        new Thread(){
            private String melodija;
            private int idA;
            private String putanja="http://localhost:8080/projekat/resources/alarmi/melodija/";
            public void run(){
                
                try {
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    putanja+=melodija;
                    putanja+="/";
                    putanja+=idA;
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setMelodijaIdAlarma(String m,int a){
                melodija=m;idA=a;
                return this;
            }
        }.setMelodijaIdAlarma(melodija,idA).start();
        
        
    }//GEN-LAST:event_PostaviMelodijuMouseReleased

    private void PustiPesmuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PustiPesmuMouseReleased
        
        String pesma=nazivPesmePolje.getText();
        pesma = pesma.replace(" ", "%20");
        //System.out.println(vreme);
        new Thread(){
            private String pesma;
            private String putanja="http://localhost:8080/projekat/resources/muzika/";
            public void run(){
                
                try {
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    
                    
                    putanja+=pesma;
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("GET");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setPesma(String p){
                pesma=p;
                return this;
            }
        }.setPesma(pesma).start();
        
        
    }//GEN-LAST:event_PustiPesmuMouseReleased

    private void IstorijaPustanjaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IstorijaPustanjaMouseReleased
        new Thread(){

            private String putanja="http://localhost:8080/projekat/resources/muzika/istorija";
            public void run(){
                
                try {
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());

                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("GET");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
        }.start();
    }//GEN-LAST:event_IstorijaPustanjaMouseReleased

    private void dodajObavezuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dodajObavezuMouseReleased
        String vreme,trajanje,destinacija;
        vreme=VremePocO.getText();
        vreme = vreme.replace(" ", "%20");
        trajanje=TrajanjeO.getText();
        trajanje = trajanje.replace(" ", "%20");
        destinacija=DestinacijaO.getText();
        destinacija = destinacija.replace(" ", "%20");
        
         new Thread(){
            private String vreme;
            private String trajanje;
            private String destinacija;
            private String putanja="http://localhost:8080/projekat/resources/planer/dodaj/";
            public void run(){
                
                try {
                  
                    //String vreme1=
                    
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    putanja+=vreme;
                    putanja+="/";
                    putanja+=trajanje;
                    putanja+="/";
                    if(destinacija.equals("")) destinacija="default";
                    putanja+=destinacija;
                    
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setVreme(String v,String t, String d){
                vreme=v;
                trajanje=t;
                destinacija=d;
                return this;
            }
        }.setVreme(vreme,trajanje,destinacija).start();
        
        
    }//GEN-LAST:event_dodajObavezuMouseReleased

    private void izlistajObavezeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_izlistajObavezeMouseReleased
        
         new Thread(){
          
            private String putanja="http://localhost:8080/projekat/resources/planer";
            public void run(){
                
                try {
                  
                    //String vreme1=
                    
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                   
                    
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("GET");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
        }.start();
        
    }//GEN-LAST:event_izlistajObavezeMouseReleased

    private void PostaviTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostaviTOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PostaviTOActionPerformed

    private void PostaviDOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostaviDOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PostaviDOActionPerformed

    private void ObrisiOMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ObrisiOMouseReleased
        
        String idO=PidObaveze.getText();
        if(idO.equals("")) return;
        
         new Thread(){
            private String idO;
            
            private String putanja="http://localhost:8080/projekat/resources/planer/";
            public void run(){
                
                try {
                  
                    //String vreme1=
                    
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    putanja+=idO;
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("DELETE");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setidO(String o){
                idO=o;
                
                return this;
            }
        }.setidO(idO).start();
        
        
    }//GEN-LAST:event_ObrisiOMouseReleased

    private void PostaviVPOMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostaviVPOMouseReleased
          String idO=PidObaveze.getText();
          String poc=PVremePocO.getText();
        if(idO.equals("")) return;
        
         new Thread(){
            private String idO;
            private String pocetak;
            private String putanja="http://localhost:8080/projekat/resources/planer/poc/";
            public void run(){
                
                try {
                  pocetak=pocetak.replace(" ", "%20");
                    //String vreme1=
                    
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    
                    putanja+=idO;
                    putanja+="/";
                    putanja+=pocetak;
                    
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setidOPoc(String o,String p){
                idO=o;
                pocetak=p;
                return this;
            }
        }.setidOPoc(idO,poc).start();
    }//GEN-LAST:event_PostaviVPOMouseReleased

    private void PostaviTOMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostaviTOMouseReleased
         String idO=PidObaveze.getText();
          String tra=PTrajanjeO.getText();
        if(idO.equals("")) return;
        
         new Thread(){
            private String idO;
            private String trajanje;
            private String putanja="http://localhost:8080/projekat/resources/planer/trajanje/";
            public void run(){
                
                try {
                  
                    //String vreme1=
                    
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    
                    putanja+=idO;
                    putanja+="/";
                    putanja+=trajanje;
                    
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setidOPoc(String o,String t){
                idO=o;
                trajanje=t;
                return this;
            }
        }.setidOPoc(idO,tra).start();
    }//GEN-LAST:event_PostaviTOMouseReleased

    private void PostaviDOMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostaviDOMouseReleased
         String idO=PidObaveze.getText();
          String dest=PDestinacijaO.getText();
          
        if(idO.equals("")) return;
        
         new Thread(){
            private String idO;
            private String destinacija;
            private String putanja="http://localhost:8080/projekat/resources/planer/destinacija/";
            public void run(){
                
                try {
                  
                    //String vreme1=
                    destinacija=destinacija.replace(" ", "%20");
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    
                    putanja+=idO;
                    putanja+="/";
                    putanja+=destinacija;
                    
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("POST");
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setidOPoc(String o,String d){
                idO=o;
                destinacija=d;
                return this;
            }
        }.setidOPoc(idO,dest).start();
    }//GEN-LAST:event_PostaviDOMouseReleased

    private void izracunajRazdaljinuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izracunajRazdaljinuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_izracunajRazdaljinuActionPerformed

    private void izracunajRazdaljinuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_izracunajRazdaljinuMouseReleased
        String poc=razdaljinaPoc.getText();
        String kraj=razdaljinaKraj.getText();
        
        
          
     
        
         new Thread(){
            private String poc;
            private String kraj;
            private String putanja="http://localhost:8080/projekat/resources/planer/vreme/";
            public void run(){
                
                try {
                  
                 InitialContext ic=new InitialContext (new Properties());
              
                 connectionFactory=(ConnectionFactory) ic.lookup("myConnFactory");
                 topic=(Topic) ic.lookup("MyTopic");
                     
                    
                    //String vreme1=
                    poc=poc.replace(" ", "%20");
                    kraj=kraj.replace(" ","%20");
                    String autoriz="Basic "+Base64.getEncoder().encodeToString((user+":"+pass).getBytes());
                    if(poc.equals("")) poc="default";
                    putanja+=poc;
                    putanja+="/";
                    putanja+=kraj;
                    
                    URL url=new URL(putanja);
                    HttpURLConnection konekcija= (HttpURLConnection ) url.openConnection();
                    konekcija.setRequestProperty("Authorization",autoriz);
                    konekcija.setRequestMethod("GET");
//                    BufferedReader in = new BufferedReader(new InputStreamReader(
//					konekcija.getInputStream()));
//			String inputLine;
//			StringBuffer response = new StringBuffer();
//
//			while ((inputLine = in.readLine()) != null) {
//				response.append(inputLine);
//			}
//			in.close();
//                        
//                    razdaljinaOdg.setText(response.toString());
                    //System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                    System.out.println("Status odgovora: "+konekcija.getResponseCode());
                    
                    JMSContext context=connectionFactory.createContext();
                    //context.setClientID("cl6");
                    JMSConsumer consumer=context.createConsumer(topic);
       
                    while(true){
           
                        Message msg=consumer.receive();
                        
                        if (msg instanceof TextMessage){
                            String tekstPoruke=((TextMessage) msg).getText();
                            if(tekstPoruke.equals("racunanje")){
                                TextMessage txt=(TextMessage)msg;
                                System.out.println("Primljena poruka");
                                
                                razdaljinaOdg.setText(txt.getIntProperty("sati")+"h "+txt.getIntProperty("minuta")+"min");
                                
                                break;
                            }
                            
                        }
                    }
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (JMSException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NamingException ex) {
                    Logger.getLogger(Pocetni.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            public Thread setidOPoc(String o,String d){
                poc=o;
                kraj=d;
                return this;
            }
        }.setidOPoc(poc,kraj).start();
    }//GEN-LAST:event_izracunajRazdaljinuMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pocetni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pocetni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pocetni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pocetni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pocetni().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ComboBoxPostavi;
    private javax.swing.JTextField DestinacijaO;
    private javax.swing.JTextField IdAlarmaMelodijaPolje;
    private javax.swing.JButton IstorijaPustanja;
    private javax.swing.JButton ObrisiO;
    private javax.swing.JTextField PDestinacijaO;
    private javax.swing.JTextField PTrajanjeO;
    private javax.swing.JTextField PVremePocO;
    private javax.swing.JTextField PidObaveze;
    private javax.swing.JButton PostaviDO;
    private javax.swing.JButton PostaviMelodiju;
    private javax.swing.JButton PostaviObican;
    private javax.swing.JButton PostaviPeriodican;
    private javax.swing.JButton PostaviTO;
    private javax.swing.JButton PostaviVPO;
    private javax.swing.JButton PustiPesmu;
    private javax.swing.JTextField TrajanjeO;
    private javax.swing.JTextField VremePocO;
    private javax.swing.JButton dodajObavezu;
    private javax.swing.JButton izlistajObaveze;
    private javax.swing.JButton izracunajRazdaljinu;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField melodijaZvonaPolje;
    private javax.swing.JTextField nazivPesmePolje;
    private javax.swing.JTextField periodPolje;
    private javax.swing.JTextField razdaljinaKraj;
    private javax.swing.JTextField razdaljinaOdg;
    private javax.swing.JTextField razdaljinaPoc;
    private javax.swing.JTextField vremeZvonaPolje;
    // End of variables declaration//GEN-END:variables
}
