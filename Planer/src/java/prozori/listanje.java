/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prozori;

import entities.Obaveza;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.ConnectionFactory;
import javax.jms.JMSContext;
import javax.jms.JMSException;
import javax.jms.JMSProducer;
import javax.jms.ObjectMessage;
import javax.jms.Topic;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.PersistenceContext;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Valja
 */
public class listanje extends javax.swing.JFrame implements ActionListener {
    private int koliko=0;
    private ArrayList<Integer> ids=new ArrayList<>();
    private ArrayList<JButton> alarmi=new ArrayList<>();
    private int idK;
     private static EntityManagerFactory emf;
    @PersistenceContext
    EntityManager em;
    
    private static final String conn="myConnFactory";
    private static final String top="MyTopic";
    
    /**
     * Creates new form listanje
     */
    public listanje() {
        initComponents();
        idObaveza.setLayout(new GridLayout());
        trajanja.setLayout(new GridLayout());
        vremenaPocetaka.setLayout(new GridLayout());
        mesta.setLayout(new GridLayout());
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        dodajZaglavlja();
        
       // jLabel1.setBackground(Color.CYAN);
       // jLabel2.setBackground(Color.LIGHT_GRAY);
       // jLabel3.setBackground(Color.GREEN);
       // jLabel4.setBackground(Color.pink);
        
        
        
    }
    public void dodajZaglavlja(){
        JPanel j1=new JPanel();
        j1.setBackground(new Color(255,126,64));
        j1.add(new JLabel("idObaveza"));
        idObaveza.add(j1);
        
        JPanel j2=new JPanel();
        j2.setBackground(new Color(126,255,64));
        j2.add(new JLabel("vreme pocetka"));
        vremenaPocetaka.add(j2);
        
        JPanel j3=new JPanel();
        j3.setBackground(new Color(64,255,126));
        j3.add(new JLabel("trajanje"));
        trajanja.add(j3);
        
        JPanel j4=new JPanel();
        j4.setBackground(new Color(64,126,255));
        j4.add(new JLabel("mesto"));
        mesta.add(j4);
        
        
        koliko++;
        alarmi.add(new JButton());
        //koliko++;
    }
    public void setKorisnik(int s){
     idK=s;   
    }
    public void dodajObavezu(String i,String v,String t, String m,int id){
        koliko++;
        ids.add(id);
        JPanel n1=new JPanel();
        JLabel lab1=new JLabel(i);
        lab1.setBackground(new Color(64,127,255));
        n1.add(lab1);
        idObaveza.add(n1);
        idObaveza.revalidate();
        
        JPanel n2=new JPanel();
        JLabel lab2=new JLabel(v);
        lab1.setBackground(new Color(127,127,127));
        n2.add(lab2);
        vremenaPocetaka.add(n2);
        vremenaPocetaka.revalidate();
        
        JPanel n3=new JPanel();
        JLabel lab3=new JLabel(t);
        lab1.setBackground(new Color(200,200,200));
        n3.add(lab3);
        trajanja.add(n3);
        trajanja.revalidate();
        
        JPanel n4=new JPanel();
        JLabel lab4=new JLabel(m);
        lab1.setBackground(new Color(255,127,64));
        n4.add(lab4);
        mesta.add(n4);
        mesta.revalidate();
        
       
        JButton button=new JButton();
        button.setText("postavi alarm");
        alarmi.add(button);
        
        button.addActionListener(this);
        
    }
    
     public void promeni(){
        trajanja.setLayout(new GridLayout(koliko,1));
        mesta.setLayout(new GridLayout(koliko,1));
        vremenaPocetaka.setLayout(new GridLayout(koliko,1));
        idObaveza.setLayout(new GridLayout(koliko,1));
        dugmici.setLayout(new GridLayout(koliko,1));
        for(int i=0;i<(koliko);i++){
            dugmici.add(alarmi.get(i));
        }
        dugmici.revalidate();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idObaveza = new javax.swing.JPanel();
        vremenaPocetaka = new javax.swing.JPanel();
        trajanja = new javax.swing.JPanel();
        mesta = new javax.swing.JPanel();
        dugmici = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout idObavezaLayout = new javax.swing.GroupLayout(idObaveza);
        idObaveza.setLayout(idObavezaLayout);
        idObavezaLayout.setHorizontalGroup(
            idObavezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 147, Short.MAX_VALUE)
        );
        idObavezaLayout.setVerticalGroup(
            idObavezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout vremenaPocetakaLayout = new javax.swing.GroupLayout(vremenaPocetaka);
        vremenaPocetaka.setLayout(vremenaPocetakaLayout);
        vremenaPocetakaLayout.setHorizontalGroup(
            vremenaPocetakaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
        );
        vremenaPocetakaLayout.setVerticalGroup(
            vremenaPocetakaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout trajanjaLayout = new javax.swing.GroupLayout(trajanja);
        trajanja.setLayout(trajanjaLayout);
        trajanjaLayout.setHorizontalGroup(
            trajanjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );
        trajanjaLayout.setVerticalGroup(
            trajanjaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mestaLayout = new javax.swing.GroupLayout(mesta);
        mesta.setLayout(mestaLayout);
        mestaLayout.setHorizontalGroup(
            mestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
        );
        mestaLayout.setVerticalGroup(
            mestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dugmiciLayout = new javax.swing.GroupLayout(dugmici);
        dugmici.setLayout(dugmiciLayout);
        dugmiciLayout.setHorizontalGroup(
            dugmiciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );
        dugmiciLayout.setVerticalGroup(
            dugmiciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(idObaveza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vremenaPocetaka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trajanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dugmici, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trajanja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vremenaPocetaka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idObaveza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mesta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dugmici, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listanje().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dugmici;
    private javax.swing.JPanel idObaveza;
    private javax.swing.JPanel mesta;
    private javax.swing.JPanel trajanja;
    private javax.swing.JPanel vremenaPocetaka;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() instanceof JButton){
            JButton koji=(JButton)e.getSource();
            emf=Persistence.createEntityManagerFactory("PlanerPU");
            EntityManager em=emf.createEntityManager();
            int j= alarmi.indexOf(koji);
            ids.get(j-1);
            try {
               InitialContext ic=new InitialContext (new Properties());
               
               ConnectionFactory connFactory=(ConnectionFactory) ic.lookup(conn);
               Topic topic=(Topic) ic.lookup(top);
               
               JMSContext context=connFactory.createContext();
               JMSProducer producer=context.createProducer();
               
               Obaveza o=(Obaveza)em.createQuery("SELECT o from Obaveza o WHERE o.idOba=:p").setParameter("p", ids.get(j-1)).getResultList().get(0);
               
               //ako nema vezana za nju obaveza uradi ovo ispod
               if(!postavljenAlarm(o,idK)){
                   koji.setText("navijen");
               
               
                    //ako ima nista
               
                    ObjectMessage txt=context.createObjectMessage(o.getPocetak());
               
                    txt.setIntProperty("user", idK);
               
             
               
                    producer.send(topic,txt);
               }
               //POPUP WINDOW
               else{
                    ProzorGreska prozor= new ProzorGreska();
                    prozor.postaviTekst("Vec je navijen alarm za ovu obavezu");
                    prozor.setVisible(true);
                    koji.setText("navijen");
               }
               
               
           } catch (NamingException ex) { 
                Logger.getLogger(listanje.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JMSException ex) {
                Logger.getLogger(listanje.class.getName()).log(Level.SEVERE, null, ex);
            } 
            
            
            
        }
         //TODO: 1. 1 prazan panel da bi se lineup
         //TODO: 2. dodavanje alarma, jms slanje poruka
         
         //TODO: 3. proveri da li postoji alarm vezan za ovu obavezu; Ako da: popupwindow greska
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private boolean postavljenAlarm(Obaveza o, int idK) {
        
        EntityManager em=emf.createEntityManager();
        List resultList = em.createQuery("SELECT a from Alarm a where a.vremeZvonjenja=:p and a.idK.idK=:k").setParameter("p", o.getPocetak()).setParameter("k", idK).getResultList();
        if(resultList.size()>0) return true;
        return false;
        
    }
}
